;; Analyzed by ClojureScript 1.8.40
{:use-macros nil, :excludes #{}, :name testapp.core, :imports nil, :requires {r reagent.core, reagent.core reagent.core, ajax ajax.core, ajax.core ajax.core}, :uses nil, :defs {current-method {:name testapp.core/current-method, :file "src/cljs/core.cljs", :line 5, :column 1, :end-line 5, :end-column 20, :meta {:file "/Users/elizaveta.sigova/Documents/ParisUtbildning/testapp/src/cljs/core.cljs", :line 5, :column 6, :end-line 5, :end-column 20}}, method {:protocol-inline nil, :meta {:file "/Users/elizaveta.sigova/Documents/ParisUtbildning/testapp/src/cljs/core.cljs", :line 7, :column 7, :end-line 7, :end-column 13, :arglists (quote ([]))}, :name testapp.core/method, :variadic false, :file "src/cljs/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, handler {:protocol-inline nil, :meta {:file "/Users/elizaveta.sigova/Documents/ParisUtbildning/testapp/src/cljs/core.cljs", :line 10, :column 7, :end-line 10, :end-column 14, :arglists (quote ([response]))}, :name testapp.core/handler, :variadic false, :file "src/cljs/core.cljs", :end-column 14, :method-params ([response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([response]))}, get-new-method {:protocol-inline nil, :meta {:file "/Users/elizaveta.sigova/Documents/ParisUtbildning/testapp/src/cljs/core.cljs", :line 13, :column 7, :end-line 13, :end-column 21, :arglists (quote ([]))}, :name testapp.core/get-new-method, :variadic false, :file "src/cljs/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, agile-button {:protocol-inline nil, :meta {:file "/Users/elizaveta.sigova/Documents/ParisUtbildning/testapp/src/cljs/core.cljs", :line 16, :column 7, :end-line 16, :end-column 19, :arglists (quote ([]))}, :name testapp.core/agile-button, :variadic false, :file "src/cljs/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, button-container {:protocol-inline nil, :meta {:file "/Users/elizaveta.sigova/Documents/ParisUtbildning/testapp/src/cljs/core.cljs", :line 19, :column 7, :end-line 19, :end-column 23, :arglists (quote ([]))}, :name testapp.core/button-container, :variadic false, :file "src/cljs/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, method-container {:protocol-inline nil, :meta {:file "/Users/elizaveta.sigova/Documents/ParisUtbildning/testapp/src/cljs/core.cljs", :line 22, :column 7, :end-line 22, :end-column 23, :arglists (quote ([]))}, :name testapp.core/method-container, :variadic false, :file "src/cljs/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{testapp.core/button-container button-container :ns :name :file :end-column testapp.core/method-container :column method-container :line :class :end-line :arglists :h3 :doc :handler :test :onClick :a testapp.core}, :order [:h3 :handler :a :class :onClick testapp.core/button-container :ns :name :file :end-column :column :line :end-line :arglists :doc :test testapp.core button-container testapp.core/method-container method-container]}, :doc nil}